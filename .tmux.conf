# Use 256 color scheme
set -g default-terminal "screen-256color"

# Enable mouse mode
set -g mouse on

# Swap windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# re-number windows when one is closed and start at 1
set -g renumber-windows on
set -g base-index 1

# Decrease command response time (for vim)
set -sg escape-time 1

# Tmux prefix
unbind C-b
set -g prefix C-s

# force a reload of the config kile
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Splitting panes
bind-key - split-window -v  -c '#{pane_current_path}'
unbind "'"
bind-key "'" split-window -h  -c '#{pane_current_path}'

# Create a new pane
bind c new-window -c "#{pane_current_path}"

# Break out of pane and create new window
bind-key b break-pane -d

# Select tmux session
bind-key C-j choose-tree

# Status bar coloring
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg white
set -g status-right '#[fg=black]%H:%M#[default] '

# Clear window
bind C-k send-keys 'C-l'\; clear-history

# set refresh interval for status bar
set -g status-interval 30

# Set left stats to be length of 50
set-option -g status-left-length 50

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Quickly open stuff
bind-key w split-window -h -c ~/dotfiles/vim/bundle/vim-snippets/snippets/ "reattach-to-user-namespace vim +CtrlP"

# Join panes
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap panes
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Break out the current pane to a window
bind b break-pane -d

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

bind-key k confirm-before -p "Kill window #W?"  kill-window
bind-key \ confirm-before -p "Kill session #S?" kill-session
